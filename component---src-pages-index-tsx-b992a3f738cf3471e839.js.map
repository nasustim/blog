{"version":3,"file":"component---src-pages-index-tsx-b992a3f738cf3471e839.js","mappings":"wPAgBO,MAAMA,EAAyBC,IAAe,IAAd,KAAEC,GAAMD,EAC9C,OACCE,EAAAA,EAAAA,KAAA,OAAAC,UACCD,EAAAA,EAAAA,KAAA,MAAAC,SACEF,EAAKG,KAAKC,IACVH,EAAAA,EAAAA,KAACI,EAAAA,SAAQ,CAAAH,UACRD,EAAAA,EAAAA,KAACK,EAAI,IAAKF,KADI,gBAAgBA,EAAEG,aAK9B,EAIFD,EAAsBF,IAC3B,MAAMI,GAAWC,EAAAA,EAAAA,UAAQ,KACxB,IAAIC,EAASN,EAAEO,KAAKC,QAAQ,aAAc,IAI1C,OAHIF,EAAOG,OAAS,MACnBH,EAAS,GAAGA,EAAOI,MAAM,EAAG,WAEtBJ,CAAM,GACX,CAACN,EAAEO,OAEN,OACCV,EAAAA,EAAAA,KAACI,EAAAA,SAAQ,CAAAH,UACRD,EAAAA,EAAAA,KAAA,MAAIc,UCvCoB,YDuCKb,UAC5Bc,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,GAAI,IAAIC,IAAI,SAASf,EAAEG,OAAQa,EAAAA,IAAcC,SAAO,EAAAnB,SAAA,EACzDD,EAAAA,EAAAA,KAAA,SAAAC,SAAQE,EAAEkB,QACVrB,EAAAA,EAAAA,KAAA,MAAIc,UC3CY,YD2COb,SAAEE,EAAEmB,SAC3BtB,EAAAA,EAAAA,KAAA,KAAGc,UC1CY,YD0CMb,SAAEM,UAGf,EEDb,MA3C+DT,IAAc,IAAb,KAAEyB,GAAMzB,EACvE,MAAMC,EAAOwB,EAAKC,kBAAkBC,MAClCvB,KAAKC,IAAC,CACNuB,YAAavB,EAAEwB,KAAKC,YACpBC,KAAM1B,EAAEwB,KAAKE,SAEbC,SAAS3B,IAAM,IAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACf,MAAO,CACNf,MAA4B,QAAvBS,EAAE5B,SAAc,QAAb6B,EAAD7B,EAAGuB,mBAAW,IAAAM,OAAb,EAADA,EAAgBV,aAAK,IAAAS,EAAAA,EAAI,GAChCV,KAA0B,QAAtBY,EAAE9B,SAAc,QAAb+B,EAAD/B,EAAGuB,mBAAW,IAAAQ,OAAb,EAADA,EAAgBb,YAAI,IAAAY,EAAAA,EAAI,GAC9B3B,KAA0B,QAAtB6B,EAAEhC,SAAc,QAAbiC,EAADjC,EAAGuB,mBAAW,IAAAU,OAAb,EAADA,EAAgB9B,YAAI,IAAA6B,EAAAA,EAAI,GAC9BzB,KAAa,QAAT2B,EAAElC,aAAC,EAADA,EAAG0B,YAAI,IAAAQ,EAAAA,EAAI,GACjB,IAGH,OACCrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAQ,CAAArC,UACRD,EAAAA,EAAAA,KAAA,QAAAC,UACCD,EAAAA,EAAAA,KAACH,EAAW,CAACE,KAAMA,OAEV,EAyBN,MAAMwC,EAAeA,KAAMvC,EAAAA,EAAAA,KAAA,SAAAC,SAAO,a","sources":["webpack://blog.nasustim.com/./src/components/organisms/articleList/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/articleList/index.css.ts","webpack://blog.nasustim.com/./src/pages/index.tsx"],"sourcesContent":["import { Link } from \"@/components/atoms/link\";\nimport { SITE_ORIGIN } from \"@/config\";\nimport { Fragment, useMemo, type FC } from \"react\";\nimport { h2Style, listItemStyle, pStyle } from \"./index.css\";\n\ntype ListItem = {\n\tdate: string;\n\tslug: string;\n\ttitle: string;\n\tbody: string;\n};\n\ntype Props = {\n\tlist: Array<ListItem>;\n};\n\nexport const ArticleList: FC<Props> = ({ list }) => {\n\treturn (\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{list.map((v) => (\n\t\t\t\t\t<Fragment key={`article-list-${v.slug}`}>\n\t\t\t\t\t\t<Item {...v} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nconst Item: FC<ListItem> = (v) => {\n\tconst bodyText = useMemo(() => {\n\t\tlet result = v.body.replace(/<[^>]*>?/gm, \"\");\n\t\tif (result.length > 100) {\n\t\t\tresult = `${result.slice(0, 120)}...`;\n\t\t}\n\t\treturn result;\n\t}, [v.body]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<li className={listItemStyle}>\n\t\t\t\t<Link to={new URL(`/entry${v.slug}`, SITE_ORIGIN)} noStyle>\n\t\t\t\t\t<small>{v.date}</small>\n\t\t\t\t\t<h2 className={h2Style}>{v.title}</h2>\n\t\t\t\t\t<p className={pStyle}>{bodyText}</p>\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t</Fragment>\n\t);\n};\n","import \"src/components/organisms/articleList/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/articleList/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xYjMyc2tiMCB7CiAgbWFyZ2luOiA0NnB4IDAgMCAwOwp9Ci5fMWIzMnNrYjEgewogIGZvbnQtc2l6ZTogMjRweDsKICBmb250LXdlaWdodDogNDAwOwp9Ci5fMWIzMnNrYjIgewogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LXdlaWdodDogNDAwOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var h2Style = '_1b32skb1';\nexport var listItemStyle = '_1b32skb0';\nexport var pStyle = '_1b32skb2';","import { graphql, type HeadFC, type PageProps } from \"gatsby\";\nimport { Template } from \"@/components/templates/\";\nimport { ArticleList } from \"@/components/organisms/articleList\";\n\nconst IndexPage: React.FC<PageProps<Queries.IndexPageQuery>> = ({ data }) => {\n\tconst list = data.allMarkdownRemark.edges\n\t\t.map((v) => ({\n\t\t\tfrontMatter: v.node.frontmatter,\n\t\t\thtml: v.node.html,\n\t\t}))\n\t\t.flatMap((v) => {\n\t\t\treturn {\n\t\t\t\ttitle: v?.frontMatter?.title ?? \"\",\n\t\t\t\tdate: v?.frontMatter?.date ?? \"\",\n\t\t\t\tslug: v?.frontMatter?.slug ?? \"\",\n\t\t\t\tbody: v?.html ?? \"\",\n\t\t\t};\n\t\t});\n\n\treturn (\n\t\t<Template>\n\t\t\t<main>\n\t\t\t\t<ArticleList list={list} />\n\t\t\t</main>\n\t\t</Template>\n\t);\n};\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n"],"names":["ArticleList","_ref","list","_jsx","children","map","v","Fragment","Item","slug","bodyText","useMemo","result","body","replace","length","slice","className","_jsxs","Link","to","URL","SITE_ORIGIN","noStyle","date","title","data","allMarkdownRemark","edges","frontMatter","node","frontmatter","html","flatMap","_v$frontMatter$title","_v$frontMatter","_v$frontMatter$date","_v$frontMatter2","_v$frontMatter$slug","_v$frontMatter3","_v$html","Template","Head"],"sourceRoot":""}