{"version":3,"file":"component---src-pages-index-tsx-2cbd547e2dfa98bac502.js","mappings":"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","sources":["webpack://blog.nasustim.com/./src/components/organisms/meta/common-head/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/articleList/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/articleList/index.css.ts","webpack://blog.nasustim.com/./src/pages/index.tsx","webpack://blog.nasustim.com/./src/utils/markdownUtils/index.ts"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\nimport type { FC } from \"react\";\n\ntype Props = {\n\ttitle?: string;\n\tdescription?: string;\n\timage?: string;\n\tsiteUrl?: string;\n};\n\nexport const CommonHead: FC<Props> = ({\n\ttitle,\n\tdescription,\n\timage,\n\tsiteUrl,\n}) => {\n\tconst data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl \n        }\n      }\n    }\n  `);\n\tconst { twitterUsername } = data.site.siteMetadata;\n\n\tconst _title = title ?? data.site.siteMetadata.title;\n\tconst _description = description ?? data.site.siteMetadata.description;\n\tconst _image = image ?? data.site.siteMetadata.image;\n\tconst _siteUrl = siteUrl ?? data.site.siteMetadata.siteUrl;\n\n\treturn (\n\t\t<>\n\t\t\t<title>{_title}</title>\n\t\t\t<meta name=\"description\" content={_description} />\n\t\t\t<link rel=\"canonical\" href={_siteUrl} />\n\n\t\t\t{/** OpenGraph */}\n\t\t\t<meta property=\"og:title\" content={_title} />\n\t\t\t<meta property=\"og:description\" content={_description} />\n\t\t\t<meta property=\"og:image\" content={_image} />\n\t\t\t<meta property=\"og:url\" content={_siteUrl} />\n\t\t\t<meta\n\t\t\t\tproperty=\"og:type\"\n\t\t\t\tcontent={\n\t\t\t\t\t// todo: Change to more surely process\n\t\t\t\t\t_siteUrl.match(\"entry\") ? \"article\" : \"website\"\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t{/** X (former Twitter) */}\n\t\t\t<meta property=\"twitter:card\" content=\"summary\" />\n\t\t\t<meta property=\"twitter:url\" content={_siteUrl} />\n\t\t\t<meta property=\"twitter:title\" content={_title} />\n\t\t\t<meta property=\"twitter:image\" content={_image} />\n\t\t\t<meta property=\"twitter:description\" content={_description} />\n\t\t\t<meta property=\"twitter:creator\" content={twitterUsername} />\n\t\t</>\n\t);\n};\n","import { Link } from \"@/components/atoms/link\";\nimport { SITE_ORIGIN } from \"@/config\";\nimport { Fragment, useMemo, type FC } from \"react\";\nimport { h2Style, listItemStyle, pStyle } from \"./index.css\";\nimport { toPlainText } from \"@/utils/markdownUtils\";\n\ntype ListItem = {\n\tdate: string;\n\tslug: string;\n\ttitle: string;\n\tbody: string;\n};\n\ntype Props = {\n\tlist: Array<ListItem>;\n};\n\nexport const ArticleList: FC<Props> = ({ list }) => {\n\treturn (\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{list.map((v) => (\n\t\t\t\t\t<Fragment key={`article-list-${v.slug}`}>\n\t\t\t\t\t\t<Item {...v} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nconst Item: FC<ListItem> = (v) => {\n\tconst bodyText = useMemo(() => {\n\t\tlet result = toPlainText(v.body);\n\t\tif (result.length > 120) {\n\t\t\tresult = `${result.slice(0, 120)}...`;\n\t\t}\n\t\treturn result;\n\t}, [v.body]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<li className={listItemStyle}>\n\t\t\t\t<Link to={new URL(`/entry/${v.slug}`, SITE_ORIGIN)} noStyle>\n\t\t\t\t\t<small>{v.date}</small>\n\t\t\t\t\t<h2 className={h2Style}>{v.title}</h2>\n\t\t\t\t\t<p className={pStyle}>{bodyText}</p>\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t</Fragment>\n\t);\n};\n","import \"src/components/organisms/articleList/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/articleList/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xYjMyc2tiMCB7CiAgbWFyZ2luOiA0NnB4IDAgMCAwOwp9Ci5fMWIzMnNrYjEgewogIGZvbnQtc2l6ZTogMjRweDsKICBmb250LXdlaWdodDogNDAwOwp9Ci5fMWIzMnNrYjIgewogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LXdlaWdodDogNDAwOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var h2Style = '_1b32skb1';\nexport var listItemStyle = '_1b32skb0';\nexport var pStyle = '_1b32skb2';","import { graphql, type HeadFC, type PageProps } from \"gatsby\";\nimport { Template } from \"@/components/templates/\";\nimport { ArticleList } from \"@/components/organisms/articleList\";\nimport { CommonHead } from \"@/components/organisms/meta/common-head\";\n\nconst IndexPage: React.FC<PageProps<Queries.IndexPageQuery>> = ({\n\tdata,\n\tlocation,\n}) => {\n\tconst list = data.allMarkdownRemark.edges\n\t\t.map((v) => ({\n\t\t\tfrontMatter: v.node.frontmatter,\n\t\t\thtml: v.node.html,\n\t\t}))\n\t\t.flatMap((v) => {\n\t\t\treturn {\n\t\t\t\ttitle: v?.frontMatter?.title ?? \"\",\n\t\t\t\tdate: v?.frontMatter?.date ?? \"\",\n\t\t\t\tslug: v?.frontMatter?.slug ?? \"\",\n\t\t\t\tbody: v?.html ?? \"\",\n\t\t\t};\n\t\t});\n\n\treturn (\n\t\t<Template pathname={location.pathname}>\n\t\t\t<main>\n\t\t\t\t<ArticleList list={list} />\n\t\t\t</main>\n\t\t</Template>\n\t);\n};\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => {\n\treturn <CommonHead />;\n};\n","export const toPlainText = (markdown: string): string =>\n\tmarkdown.replace(/<[^>]*>?/gm, \"\");\n"],"names":["CommonHead","_ref","title","description","image","siteUrl","data","useStaticQuery","twitterUsername","site","siteMetadata","_title","_description","_image","_siteUrl","_jsxs","_Fragment","children","_jsx","name","content","rel","href","property","match","ArticleList","list","map","v","Fragment","Item","slug","bodyText","useMemo","result","toPlainText","body","length","slice","className","Link","to","URL","SITE_ORIGIN","noStyle","date","location","allMarkdownRemark","edges","frontMatter","node","frontmatter","html","flatMap","_v$frontMatter$title","_v$frontMatter","_v$frontMatter$date","_v$frontMatter2","_v$frontMatter$slug","_v$frontMatter3","_v$html","Template","pathname","Head","markdown","replace"],"sourceRoot":""}