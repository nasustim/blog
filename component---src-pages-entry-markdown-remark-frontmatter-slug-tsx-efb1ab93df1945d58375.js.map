{"version":3,"file":"component---src-pages-entry-markdown-remark-frontmatter-slug-tsx-efb1ab93df1945d58375.js","mappings":"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","sources":["webpack://blog.nasustim.com/./node_modules/extend/index.js","webpack://blog.nasustim.com/./src/components/atoms/link/index.tsx","webpack://blog.nasustim.com/./src/components/atoms/link/index.css.ts","webpack://blog.nasustim.com/./src/components/organisms/header/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/header/index.css.ts","webpack://blog.nasustim.com/./src/style.css.ts","webpack://blog.nasustim.com/./src/components/templates/index.tsx","webpack://blog.nasustim.com/./src/components/templates/index.css.ts","webpack://blog.nasustim.com/./src/config.ts","webpack://blog.nasustim.com/./node_modules/comma-separated-tokens/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://blog.nasustim.com/./node_modules/space-separated-tokens/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://blog.nasustim.com/./node_modules/html-url-attributes/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-chunked/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-subtokenize/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-combine-extensions/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/content.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-resolve-all/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/list.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-destination/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-label/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-title/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-whitespace/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-normalize-identifier/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/definition.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-html-tag-name/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://blog.nasustim.com/./node_modules/decode-named-character-reference/index.dom.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-classify-character/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/attention.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-decode-string/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/types.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-sanitize-uri/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/footer.js","webpack://blog.nasustim.com/./node_modules/unist-util-visit-parents/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/unist-util-visit-parents/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unist-util-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/revert.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://blog.nasustim.com/./node_modules/trim-lines/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/state.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/remark-rehype/lib/index.js","webpack://blog.nasustim.com/./node_modules/bail/index.js","webpack://blog.nasustim.com/./node_modules/is-plain-obj/index.js","webpack://blog.nasustim.com/./node_modules/trough/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-autolink-literal/node_modules/ccount/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-footnote/node_modules/micromark-util-normalize-identifier/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://blog.nasustim.com/./node_modules/markdown-table/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://blog.nasustim.com/./node_modules/longest-streak/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-string/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-phrasing/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-string/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-phrasing/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm/node_modules/micromark-util-chunked/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm/node_modules/micromark-util-combine-extensions/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-normalize-identifier/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-chunked/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-classify-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-resolve-all/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm/index.js","webpack://blog.nasustim.com/./node_modules/remark-gfm/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/schema.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/merge.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/normalize.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/info.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/types.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/defined-info.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/create.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/xlink.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/xml.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/xmlns.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/aria.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/html.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/svg.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-parse-selector/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/find.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hastscript/lib/create-h.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hastscript/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/vfile-location/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/web-namespaces/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-from-parse5/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/zwitch/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-to-parse5/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/html-void-elements/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/unicode.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/error-codes.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/token.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/decode_codepoint.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/decode.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/html.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/tokenizer/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/parser/open-element-stack.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/parser/formatting-element-list.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/tree-adapters/default.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/doctype.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/foreign-content.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/parser/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/escape.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/serializer/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/unist-util-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-raw/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/lib/index.js","webpack://blog.nasustim.com/./src/components/organisms/markdown-renderer/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/markdown-renderer/index.css.ts","webpack://blog.nasustim.com/./src/pages/entry/{markdownRemark.frontmatter__slug}.tsx","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://blog.nasustim.com/./node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import { clsx } from \"clsx\";\nimport type { FC, ReactNode } from \"react\";\nimport { css, noStyle as noStyleCss } from \"./index.css\";\n\ntype Props = {\n\tchildren: ReactNode;\n\tto: URL;\n\n\t// styling\n\tnoStyle?: boolean;\n};\n\nexport const Link: FC<Props> = ({ to, children, noStyle = false }) => (\n\t<a className={clsx(noStyle ? noStyleCss : css)} href={to.toString()}>\n\t\t{children}\n\t</a>\n);\n","import \"src/style.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/atoms/link/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/atoms/link/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnJucmRzNjAgewogIGNvbG9yOiBpbmhlcml0OwogIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDsKfQoucm5yZHM2MSB7CiAgY29sb3I6IHZhcigtLXV4ZTRrajEpOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var css = 'rnrds61';\nexport var noStyle = 'rnrds60';","import { Link } from \"@/components/atoms/link\";\nimport { css } from \"./index.css\";\nimport { SITE_ORIGIN, TITLE } from \"@/config\";\n\nexport const Header = () => (\n\t<header>\n\t\t<h1 className={css}>\n\t\t\t<Link to={new URL(\"/\", SITE_ORIGIN)} noStyle={true}>\n\t\t\t\t🌊 {TITLE}\n\t\t\t</Link>\n\t\t</h1>\n\t</header>\n);\n","import \"src/style.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/organisms/header/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/header/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmtmYXV1YzAgewogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMzJweDsKICBtYXgtd2lkdGg6IDMyMHB4OwogIGNvbG9yOiB2YXIoLS11eGU0a2oxKTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var css = 'kfauuc0';","import \"src/style.css.ts.vanilla.css!=!../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var themeClass = 'uxe4kj0';\nexport var vars = {color:{primary:'var(--uxe4kj1)',secondary:'var(--uxe4kj2)',white:'var(--uxe4kj3)'}};","import \"@acab/reset.css\";\n\nimport type { FC, ReactNode } from \"react\";\nimport { containerCss, innerCss } from \"./index.css\";\nimport { Header } from \"@/components/organisms/header\";\nimport { themeClass } from \"@/style.css\";\nimport { clsx } from \"clsx\";\n\nexport const Template: FC<{\n\tchildren: ReactNode;\n}> = ({ children }) => (\n\t<div className={clsx(themeClass, containerCss)}>\n\t\t<div className={innerCss}>\n\t\t\t<Header />\n\t\t\t{children}\n\t\t</div>\n\t</div>\n);\n","import \"src/style.css.ts.vanilla.css!=!../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/templates/index.css.ts.vanilla.css!=!../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/templates/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnJwanhwNDAgewogIHdpZHRoOiAxMDBzdnc7CiAgbWluLWhlaWdodDogMTAwc3ZoOwogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwogIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBSb2JvdG8sIHNhbnMtc2VyaWYsIHNlcmlmOwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXV4ZTRrajMpOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKICBhbGlnbi1pdGVtczogc3RhcnQ7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KLnJwanhwNDEgewogIGhlaWdodDogMTAwJTsKICBwYWRkaW5nOiAxNnB4OwogIHdpZHRoOiAxMDAlOwp9CkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk2MHB4KSB7CiAgLnJwanhwNDEgewogICAgd2lkdGg6IDk2MHB4OwogIH0KfQ==\\\"}!../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var containerCss = 'rpjxp40';\nexport var innerCss = 'rpjxp41';","const isProd = process.env.NODE_ENV === \"production\";\n\n/**\n * Site configrations\n */\nconst SITE_SCHEMA = isProd ? \"https\" : \"http\";\nconst SITE_DOMAIN = isProd ? \"blog.nasustim.com\" : \"localhost:8000\";\nexport const SITE_ORIGIN = `${SITE_SCHEMA}://${SITE_DOMAIN}`;\n\n/**\n * Google Tag Manager\n */\nexport const GTAG_TRACKING_ID = isProd ? \"G-3YY246MS11\" : \"\";\n\n/**\n * Contents\n */\nexport const TITLE = \"おみつ雑記\";\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events.get(lineIndex)[1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      events.splice(index + 1, token.type === \"labelImage\" ? 4 : 2);\n      token.type = \"data\";\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: \"label\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: \"labelText\",\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push([...events]);\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      events.push(...slice);\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('hast-util-raw').Options} Options\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","import type { FC } from \"react\";\nimport Markdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { css } from \"./index.css\";\nimport rehypeRaw from \"rehype-raw\";\n\ntype Props = {\n\tmarkdown: string;\n};\nexport const MarkdownRenderer: FC<Props> = ({ markdown }) => (\n\t<div className={css}>\n\t\t<Markdown remarkPlugins={[remarkGfm]} rehypePlugins={[rehypeRaw]}>\n\t\t\t{markdown}\n\t\t</Markdown>\n\t</div>\n);\n","import \"src/style.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/organisms/markdown-renderer/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/markdown-renderer/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8yZGFucTYwIHsKICB3aWR0aDogMTAwJTsKfQoqIHsKICBjb2xvcjogdmFyKC0tdXhlNGtqMSk7Cn0KcCBpbWcgewogIG1heC13aWR0aDogMTAwJTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var css = '_2danq60';","import { MarkdownRenderer } from \"@/components/organisms/markdown-renderer\";\nimport { Template } from \"@/components/templates\";\nimport { type PageProps, graphql } from \"gatsby\";\n\nconst EntryPage: React.FC<PageProps<Queries.EntryPageQuery>> = ({ data }) => {\n\tif (!data.markdownRemark) {\n\t\treturn <></>;\n\t}\n\tconst { frontmatter, rawMarkdownBody } = data.markdownRemark;\n\n\treturn (\n\t\t<Template>\n\t\t\t<main>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{frontmatter?.title}</h1>\n\t\t\t\t\t<h2>{frontmatter?.date}</h2>\n\t\t\t\t\t<MarkdownRenderer markdown={rawMarkdownBody ?? \"\"} />\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</Template>\n\t);\n};\n\nexport default EntryPage;\n\nexport const pageQuery = graphql`\n  query EntryPage ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      rawMarkdownBody\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","Link","_ref","to","children","noStyle","_jsx","className","clsx","href","Header","_jsxs","URL","SITE_ORIGIN","TITLE","Template","parse","tokens","input","String","index","indexOf","start","end","token","slice","trim","push","stringify","values","settings","join","padRight","padLeft","nameRe","nameReJsx","emptyOptions","jsx","test","re","empty","replace","Schema","property","normal","space","this","merge","definitions","assign","normalize","toLowerCase","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","DefinedInfo","mask","super","mark","check","own","create","definition","prop","properties","info","transform","attributes","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","style","tabIndex","title","translate","type","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","camelcase","charAt","toUpperCase","hastToReact","split","point","pointStart","node","position","line","column","undefined","pos","VFileMessage","Error","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","message","ruleId","source","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","TypeError","filePath","development","jsxDEV","props","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","styleObject","replacer","error","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","concat","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","all","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","document","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","extensions","combineExtensions","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","lines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","ccount","character","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","unsafe","longestStreak","substring","checkQuote","quote","checkEmphasis","formatHeadingAsSetext","literalWithBreak","setext","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","encode","rank","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","parsePrimitive","finalResult","h","s","cr","lf","webNamespaces","mathml","nodeName","quirksMode","childNodes","location","loc","indices","toOffset","eol","toPoint","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","verbose","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","currentSchema","parentNode","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","attrName","_a","Uint16Array","c","decodeMap","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","NS","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","element","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","stitches","resetTokenizer","fromParse5","stitch","toParse5","tag","createParse5Location","cloneWithoutChildren","fakeRoot","handleRaw","setPoint","node_","extra","rehypeRaw","MarkdownRenderer","markdown","markdownRemark","_Fragment","frontmatter","rawMarkdownBody","date","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","whitespace","errorsList","msg","filename","silent","m","comments","val","decl","decls","declarations","__importDefault","mod","__esModule","inline_style_parser_1","hasIterator","forEach","e","t","f","o"],"sourceRoot":""}