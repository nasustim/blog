{"version":3,"file":"component---src-page-components-index-tsx-7181517d834832408b7e.js","mappings":"gQAmBO,MAAMA,EAAyBC,IAI/B,IAJgC,KACrCC,EAAI,WACJC,EAAU,iBACVC,GACDH,EACC,OACEI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGJ,EAAKM,KAAKC,IACTF,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAAAJ,UACPC,EAAAA,EAAAA,KAACI,EAAI,IAAKF,KADG,gBAAgBA,EAAEG,aAKrCL,EAAAA,EAAAA,KAAA,OAAKM,UC7Ba,YD6BSP,SACxBQ,MAAMC,KAAK,CAAEC,OAAQb,IAAcK,KAAI,CAACS,EAAGC,KAC1C,MAAMC,EAAK,IAAIC,IAAU,IAANF,EAAU,IAAM,SAASA,EAAI,IAAKG,EAAAA,IAErD,OAAIH,IAAMd,GACDG,EAAAA,EAAAA,KAAA,OAAAD,SAAMY,EAAI,KAGjBX,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAgCH,GAAIA,EAAGb,SACzCY,EAAI,GADI,SAASC,EAAGI,aAEhB,QAIT,EAIJZ,EAAsBF,IAC1B,MAAMe,GAAWC,EAAAA,EAAAA,UAAQ,KACvB,IAAIC,GAASC,EAAAA,EAAAA,GAAYlB,EAAEmB,MAI3B,OAHIF,EAAOV,OAAS,MAClBU,EAAS,GAAGA,EAAOG,MAAM,EAAG,WAEvBH,CAAM,GACZ,CAACjB,EAAEmB,OAEN,OACErB,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAAAJ,UACPC,EAAAA,EAAAA,KAAA,MAAIM,UC5DiB,YD4DQP,UAC3BD,EAAAA,EAAAA,MAACiB,EAAAA,EAAI,CAACH,GAAI,IAAIC,IAAI,UAAUX,EAAEG,OAAQS,EAAAA,IAAcS,SAAO,EAAAxB,SAAA,EACzDC,EAAAA,EAAAA,KAAA,SAAAD,SAAQG,EAAEsB,QACVxB,EAAAA,EAAAA,KAAA,MAAIM,UChEO,YDgEYP,SAAEG,EAAEuB,SAC3BzB,EAAAA,EAAAA,KAAA,KAAGM,UC/DO,YD+DWP,SAAEkB,UAGlB,E,cEXf,MArD+DvB,IAIzD,IAJ0D,KAC9DgC,EAAI,SACJC,EAAQ,YACRC,GACDlC,EACC,MAAMC,EAAO+B,EAAKG,kBAAkBC,MAAM7B,KAAKC,IAAM,IAAA6B,EAAAC,EAAAC,EAAAC,EAAAC,EACnD,MAAMC,EAAclC,SAAO,QAAN6B,EAAD7B,EAAGmC,YAAI,IAAAN,OAAN,EAADA,EAASK,YACvBE,EAAOpC,SAAO,QAAN8B,EAAD9B,EAAGmC,YAAI,IAAAL,OAAN,EAADA,EAASM,KAEtB,MAAO,CACLb,MAAyB,QAApBQ,EAAEG,aAAW,EAAXA,EAAaX,aAAK,IAAAQ,EAAAA,EAAI,GAC7BT,KAAuB,QAAnBU,EAAEE,aAAW,EAAXA,EAAaZ,YAAI,IAAAU,EAAAA,EAAI,GAC3B7B,KAAuB,QAAnB8B,EAAEC,aAAW,EAAXA,EAAa/B,YAAI,IAAA8B,EAAAA,EAAI,GAC3Bd,KAAMiB,QAAAA,EAAQ,GACf,IAGH,OACEtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAQ,CAACC,SAAUb,EAASa,SAASzC,UACpCC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACP,EAAW,CACVE,KAAMA,EACNE,iBAAkB+B,EAAY/B,iBAC9BD,WAAYgC,EAAYhC,gBAGnB,EA6BR,MAAM6C,EAAeA,KACnBzC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,G","sources":["webpack://blog.nasustim.com/./src/components/organisms/articleList/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/articleList/index.css.ts","webpack://blog.nasustim.com/./src/page-components/index.tsx"],"sourcesContent":["import { Link } from \"@/components/atoms/link\";\nimport { SITE_ORIGIN } from \"@/config\";\nimport { Fragment, useMemo, type FC } from \"react\";\nimport { h2Style, listItemStyle, pagerStyle, pStyle } from \"./index.css\";\nimport { toPlainText } from \"@/utils/markdownUtils\";\n\ntype ListItem = {\n  date: string;\n  slug: string;\n  title: string;\n  body: string;\n};\n\ntype Props = {\n  list: Array<ListItem>;\n  pagesCount: number;\n  currentPageIndex: number;\n};\n\nexport const ArticleList: FC<Props> = ({\n  list,\n  pagesCount,\n  currentPageIndex,\n}) => {\n  return (\n    <div>\n      <ul>\n        {list.map((v) => (\n          <Fragment key={`article-list-${v.slug}`}>\n            <Item {...v} />\n          </Fragment>\n        ))}\n      </ul>\n      <div className={pagerStyle}>\n        {Array.from({ length: pagesCount }).map((_, i) => {\n          const to = new URL(i === 0 ? \"/\" : `/page/${i + 1}`, SITE_ORIGIN);\n\n          if (i === currentPageIndex) {\n            return <div>{i + 1}</div>;\n          }\n          return (\n            <Link key={`pager-${to.toString()}`} to={to}>\n              {i + 1}\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Item: FC<ListItem> = (v) => {\n  const bodyText = useMemo(() => {\n    let result = toPlainText(v.body);\n    if (result.length > 120) {\n      result = `${result.slice(0, 120)}...`;\n    }\n    return result;\n  }, [v.body]);\n\n  return (\n    <Fragment>\n      <li className={listItemStyle}>\n        <Link to={new URL(`/entry/${v.slug}`, SITE_ORIGIN)} noStyle>\n          <small>{v.date}</small>\n          <h2 className={h2Style}>{v.title}</h2>\n          <p className={pStyle}>{bodyText}</p>\n        </Link>\n      </li>\n    </Fragment>\n  );\n};\n","import \"src/components/organisms/articleList/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/articleList/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xYjMyc2tiMCB7CiAgbWFyZ2luOiA0NnB4IDAgMCAwOwp9Ci5fMWIzMnNrYjEgewogIGZvbnQtc2l6ZTogMjRweDsKICBmb250LXdlaWdodDogNDAwOwp9Ci5fMWIzMnNrYjIgewogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LXdlaWdodDogNDAwOwp9Ci5fMWIzMnNrYjMgewogIG1hcmdpbi10b3A6IDI0cHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGdhcDogOHB4Owp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var h2Style = '_1b32skb1';\nexport var listItemStyle = '_1b32skb0';\nexport var pStyle = '_1b32skb2';\nexport var pagerStyle = '_1b32skb3';","import { graphql, type HeadFC, type PageProps } from \"gatsby\";\nimport { Template } from \"@/components/templates/\";\nimport { ArticleList } from \"@/components/organisms/articleList\";\nimport { CommonHead } from \"@/components/organisms/meta/common-head\";\n\nconst IndexPage: React.FC<PageProps<Queries.IndexPageQuery>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const list = data.allMarkdownRemark.edges.map((v) => {\n    const frontmatter = v?.node?.frontmatter;\n    const html = v?.node?.html;\n\n    return {\n      title: frontmatter?.title ?? \"\",\n      date: frontmatter?.date ?? \"\",\n      slug: frontmatter?.slug ?? \"\",\n      body: html ?? \"\",\n    };\n  });\n\n  return (\n    <Template pathname={location.pathname}>\n      <main>\n        <ArticleList\n          list={list}\n          currentPageIndex={pageContext.currentPageIndex}\n          pagesCount={pageContext.pagesCount}\n        />\n      </main>\n    </Template>\n  );\n};\n\nexport const query = graphql`\n  query IndexPage($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {frontmatter: {date: DESC}}\n      filter: { frontmatter: { draft: { eq: false } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            draft\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => {\n  return <CommonHead />;\n};\n"],"names":["ArticleList","_ref","list","pagesCount","currentPageIndex","_jsxs","children","_jsx","map","v","Fragment","Item","slug","className","Array","from","length","_","i","to","URL","SITE_ORIGIN","Link","toString","bodyText","useMemo","result","toPlainText","body","slice","noStyle","date","title","data","location","pageContext","allMarkdownRemark","edges","_v$node","_v$node2","_frontmatter$title","_frontmatter$date","_frontmatter$slug","frontmatter","node","html","Template","pathname","Head","CommonHead"],"sourceRoot":""}